<%- include('../partials/header') %>

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="mb-4">Draft Order Management</h1>
            
            <!-- Instructions -->
            <div class="alert alert-info">
                <h5>How to Use:</h5>
                <ul>
                    <li>Drag and drop teams to reorder the draft</li>
                    <li>The draft uses a snake format (alternating order each round)</li>
                    <li>Traded picks are shown with both current owner and original owner</li>
                    <li>Click "Save Draft Order" to update, or "Regenerate" to reset all trades</li>
                </ul>
            </div>

            <!-- Team Order Section -->
            <div class="row">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header bg-primary text-white">
                            <h5 class="mb-0">Team Draft Order</h5>
                        </div>
                        <div class="card-body">
                            <p class="text-muted">Drag teams to reorder:</p>
                            <ul id="teamList" class="list-group sortable-list">
                                <% teams.forEach((team, index) => { %>
                                <li class="list-group-item d-flex justify-content-between align-items-center" data-team-id="<%= team.team_id %>">
                                    <span class="handle">
                                        <i class="fas fa-grip-vertical mr-2"></i>
                                        <%= index + 1 %>. <%= team.team_name %>
                                    </span>
                                    <small class="text-muted"><%= team.first_name %> <%= team.last_name %></small>
                                </li>
                                <% }); %>
                            </ul>
                            
                            <div class="mt-3">
                                <button class="btn btn-primary btn-block" onclick="saveDraftOrder()">
                                    <i class="fas fa-save"></i> Save Draft Order
                                </button>
                                <small class="text-muted text-center d-block mt-2">
                                    All traded picks will move with their original team's new position
                                </small>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Draft Picks Preview -->
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-header bg-secondary text-white">
                            <h5 class="mb-0">Draft Picks Preview (First 3 Rounds)</h5>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-sm table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Pick</th>
                                            <th>Round 1</th>
                                            <th>Round 2</th>
                                            <th>Round 3</th>
                                        </tr>
                                    </thead>
                                    <tbody id="draftPreview">
                                        <% for (let pick = 1; pick <= teamsCount; pick++) { %>
                                        <tr>
                                            <td><strong><%= pick %></strong></td>
                                            <% for (let round = 1; round <= 3; round++) { %>
                                                <% 
                                                const pickData = draftOrder.find(p => p.round === round && p.pick_number === pick);
                                                const isTraded = pickData && pickData.fantasy_team_id !== pickData.original_team_id;
                                                %>
                                                <td class="<%= isTraded ? 'table-warning' : '' %>">
                                                    <% if (pickData) { %>
                                                        <div>
                                                            <strong><%= pickData.current_team_name || 'Unknown' %></strong>
                                                            <% if (isTraded) { %>
                                                                <br>
                                                                <small class="text-muted">
                                                                    (from <%= pickData.original_team_name %>)
                                                                </small>
                                                            <% } %>
                                                        </div>
                                                    <% } else { %>
                                                        <span class="text-muted">-</span>
                                                    <% } %>
                                                </td>
                                            <% } %>
                                        </tr>
                                        <% } %>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    <!-- All Rounds Table -->
                    <div class="card mt-3">
                        <div class="card-header bg-info text-white">
                            <h5 class="mb-0">Complete Draft Order (All <%= rounds %> Rounds)</h5>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
                                <table class="table table-sm table-striped">
                                    <thead class="thead-dark sticky-top">
                                        <tr>
                                            <th>Overall</th>
                                            <th>Round</th>
                                            <th>Pick</th>
                                            <th>Current Owner</th>
                                            <th>Original Owner</th>
                                            <th>Status</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% draftOrder.forEach(pick => { %>
                                        <tr class="<%= pick.fantasy_team_id !== pick.original_team_id ? 'table-warning' : '' %>">
                                            <td><strong>#<%= pick.overall_pick %></strong></td>
                                            <td>Round <%= pick.round %></td>
                                            <td>Pick <%= pick.pick_number %></td>
                                            <td><%= pick.current_team_name || 'Unknown' %></td>
                                            <td><%= pick.original_team_name || 'Unknown' %></td>
                                            <td>
                                                <% if (pick.fantasy_team_id !== pick.original_team_id) { %>
                                                    <span class="badge badge-warning">Traded</span>
                                                <% } else { %>
                                                    <span class="badge badge-success">Original</span>
                                                <% } %>
                                            </td>
                                        </tr>
                                        <% }); %>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Include Sortable.js for drag and drop -->
<script src="https://cdn.jsdelivr.net/npm/sortablejs@latest/Sortable.min.js"></script>

<script>
// Initialize drag and drop
const teamList = document.getElementById('teamList');
const sortable = Sortable.create(teamList, {
    animation: 150,
    handle: '.handle',
    ghostClass: 'bg-light',
    onEnd: function() {
        updateDraftPreview();
    }
});

// Update the preview when teams are reordered
function updateDraftPreview() {
    const teams = Array.from(teamList.children).map(li => ({
        id: parseInt(li.dataset.teamId),
        name: li.querySelector('span').textContent.replace(/^\d+\.\s*/, '').split('\n')[0].trim()
    }));
    
    // Update the preview table (you could make this more dynamic with AJAX)
    console.log('New team order:', teams);
}

// Save the draft order
async function saveDraftOrder() {
    const teamOrder = Array.from(teamList.children).map(li => parseInt(li.dataset.teamId));
    
    if (!confirm('Save this draft order? This will update the pick assignments but preserve trades.')) {
        return;
    }
    
    try {
        const response = await fetch('/admin/draft-order', {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ teamOrder })
        });
        
        const result = await response.json();
        
        if (result.success) {
            showAlert('success', 'Draft order updated successfully!');
            setTimeout(() => location.reload(), 1500);
        } else {
            showAlert('danger', 'Error: ' + (result.error || 'Failed to update draft order'));
        }
    } catch (error) {
        console.error('Error saving draft order:', error);
        showAlert('danger', 'Error saving draft order');
    }
}


// Show alert message
function showAlert(type, message) {
    const alertDiv = document.createElement('div');
    alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
    alertDiv.style.top = '20px';
    alertDiv.style.right = '20px';
    alertDiv.style.zIndex = '9999';
    alertDiv.innerHTML = `
        ${message}
        <button type="button" class="close" data-dismiss="alert">
            <span>&times;</span>
        </button>
    `;
    document.body.appendChild(alertDiv);
    
    setTimeout(() => {
        alertDiv.remove();
    }, 5000);
}
</script>

<style>
.sortable-list {
    min-height: 200px;
}

.sortable-list .list-group-item {
    cursor: move;
}

.sortable-list .list-group-item.bg-light {
    opacity: 0.5;
}

.handle {
    cursor: grab;
}

.handle:active {
    cursor: grabbing;
}

.sticky-top {
    position: sticky;
    top: 0;
    z-index: 10;
    background-color: #343a40 !important;
}
</style>

